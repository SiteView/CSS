<?xml version="1.0" encoding="UTF-8"?>
<project name="org.csstudio.nams.application.department.decision test coverage report generation" default="coverage" basedir=".">
	<description>
		org.csstudio.nams.application.department.decision test coverage report generation
    </description>

	<property file="test-coverage.properties" />

	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${junit.dir}">
			<include name="*.jar" />
		</fileset>
		<!-- Referenced plugin sources -->
		<fileset dir="../../org.csstudio.nams.service.logging/bin">
			<include name="*.class" />
		</fileset>
		<fileset dir="../../org.csstudio.nams.common/bin">
			<include name="*.class" />
		</fileset>
		<fileset dir="../../org.csstudio.nams.service.messaging/bin">
			<include name="*.class" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<target name="init">
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${src.dir}" />
		<mkdir dir="${instrumented.dir}" />
		<mkdir dir="${reports.xml.dir}" />
		<mkdir dir="${reports.html.dir}" />
		<mkdir dir="${coverage.xml.dir}" />
		<mkdir dir="${coverage.html.dir}" />
	</target>

	<target name="compile" depends="init">
		<copy overwrite="true" todir="${src.dir}">
			<fileset dir="${src.orig}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${src.test.dir}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${src.test.easyMock.dir}">
				<include name="**/*" />
			</fileset>
		</copy>

		<javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes">
			<classpath refid="cobertura.classpath" />
		</javac>
	</target>

	<target name="instrument" depends="init,compile">
		<!--
				Remove the coverage data file and any old instrumentation.
			-->
		<delete file="cobertura.ser" />
		<delete dir="${instrumented.dir}" />

		<!--
				Instrument the application classes, writing the
				instrumented classes into ${build.instrumented.dir}.
			-->
		<cobertura-instrument todir="${instrumented.dir}">
			<!--
					The following line causes instrument to ignore any
					source line containing a reference to log4j, for the
					purposes of coverage reporting.
				-->
			<ignore regex="org.apache.log4j.*" />

			<fileset dir="${classes.dir}">
				<!--
						Instrument all the application classes, but
						don't instrument the test classes.
					-->
				<include name="**/*.class" />
				<exclude name="**/*_Test.class" />
				<exclude name="**/*_Test$*.class" />
				<exclude name="de/c1wps/desy/ams/AllTests.class" />
				<exclude name="**/*_SubSystemTestSuite.class" />
				<exclude name="**/Abstract*_TestCase.class" />
				<exclude name="org/easymock/**/*.class" />
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="test" depends="init,compile">
		<junit fork="yes" dir="${basedir}" failureProperty="test.failed">
			<!--
					Note the classpath order: instrumented classes are before the
					original (uninstrumented) classes.  This is important.
				-->
			<classpath location="${instrumented.dir}" />
			<classpath location="${classes.dir}" />

			<!--
					The instrumented classes reference classes used by the
					Cobertura runtime, so Cobertura and its dependencies
					must be on your classpath.
				-->
			<classpath refid="cobertura.classpath" />

			<assertions>
				<enable />
			</assertions>

			<formatter type="xml" />
			<test name="${testcase}" todir="${reports.xml.dir}" if="testcase" />
			<batchtest todir="${reports.xml.dir}" unless="testcase">
				<fileset dir="${src.dir}">
					<include name="de/c1wps/desy/ams/AllTests.java" />
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${reports.xml.dir}">
			<fileset dir="${reports.xml.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.html.dir}" />
		</junitreport>
	</target>

	<target name="coverage-check">
		<cobertura-check branchrate="34" totallinerate="100" />
	</target>

	<target name="coverage-report">
		<!--
				Generate an XML file containing the coverage data using
				the "srcdir" attribute.
			-->
		<cobertura-report srcdir="${src.dir}" destdir="${coverage.xml.dir}" format="xml" />
	</target>

	<target name="alternate-coverage-report">
		<!--
				Generate a series of HTML files containing the coverage
				data in a user-readable form using nested source filesets.
			-->
		<cobertura-report destdir="${coverage.html.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
	</target>

	<target name="clean" description="Remove all files created by the build/test process.">
		<delete dir="${classes.dir}" />
		<delete dir="${src.dir}" />
		<delete dir="${instrumented.dir}" />
		<delete dir="${reports.dir}" />
		<delete file="cobertura.log" />
		<delete file="cobertura.ser" />
	</target>

	<target name="coverage" depends="clean,compile,instrument,test,coverage-report,alternate-coverage-report" description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports." />
</project>