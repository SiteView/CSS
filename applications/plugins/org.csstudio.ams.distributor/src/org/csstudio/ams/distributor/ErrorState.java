
/*
 * Copyright (c) 2011 Stiftung Deutsches Elektronen-Synchrotron,
 * Member of the Helmholtz Association, (DESY), HAMBURG, GERMANY.
 *
 * THIS SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN "../AS IS" BASIS.
 * WITHOUT WARRANTY OF ANY KIND, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED
 * TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR PARTICULAR PURPOSE AND
 * NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE. SHOULD THE SOFTWARE PROVE DEFECTIVE
 * IN ANY RESPECT, THE USER ASSUMES THE COST OF ANY NECESSARY SERVICING, REPAIR OR
 * CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE.
 * NO USE OF ANY SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.
 * DESY HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS,
 * OR MODIFICATIONS.
 * THE FULL LICENSE SPECIFYING FOR THE SOFTWARE THE REDISTRIBUTION, MODIFICATION,
 * USAGE AND OTHER RIGHTS AND OBLIGATIONS IS INCLUDED WITH THE DISTRIBUTION OF THIS
 * PROJECT IN THE FILE LICENSE.HTML. IF THE LICENSE IS NOT INCLUDED YOU MAY FIND A COPY
 * AT HTTP://WWW.DESY.DE/LEGAL/LICENSE.HTM
 */

package org.csstudio.ams.distributor;

/**
 * TODO (mmoeller) :
 *
 * @author mmoeller
 * @since Nov 24, 2011
 */
public enum ErrorState {

    STAT_INIT(0),
    STAT_OK(1),
    STAT_GROUP_BLOCKED(1),
    STAT_ERR_APPLICATION_DB(2),
    STAT_ERR_APPLICATION_DB_SEND(3),
    STAT_ERR_CONFIG_DB(4),

    /** JMS communication to ams internal jms partners */
    STAT_ERR_JMSCON_INT(5),

    /** JMS communication to external jms (AlarmTopic) */
    STAT_ERR_JMSCON_EXT(6),

    /** JMS communication to free topics */
    STAT_ERR_JMSCON_FREE_SEND(7),

    /** Could not update (application-db) db flag (ReplicationState)  */
    STAT_ERR_FLG_RPL(8),

    /** Could not update (config-db) db flag (BupState) */
    STAT_ERR_FLG_BUP(9),
    STAT_ERR_UNKNOWN(10),

    /** Replaces boolean false in methods */
    STAT_FALSE(999);

    /** The number that represents this state */
    private int stateNumber;

    private ErrorState(final int number) {
        stateNumber = number;
    }

    public int getStateNumber() {
        return stateNumber;
    }
}
